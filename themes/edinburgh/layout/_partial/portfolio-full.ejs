<!-- 
  进行设计 使用两种模型，
  一种是使用md方式进行设计实现图片加载，
  一种是使用了图片瀑布流进行实现操作
 -->
 <%
 function CheckUrl(url){
   var reg=/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- .\/?%&=]*)?/;
   if(!reg.test(url)){
     return false
   }
   else{
     return true
   }
 }
 %>
<% if (item.md_type) {%>
<div class="col-12 mb-4">
  <% if (!CheckUrl(item.cover_image)) { %>
    <img class="img-fluid project-img" src="<%- config.root %><%- item.cover_image || theme.default_cover_image %>" alt="<%- item.title || theme.default_post_title || "Untitled" %>">
  <% } else { %>
    <img class="img-fluid project-img" src="<%- item.cover_image %>" alt="<%- item.title || theme.default_post_title || "Untitled" %>">
  <% } %>
</div>
<div class="col-lg-4 col-12 pt-3 px-4 pr-lg-5">
  <h1><%- item.title || theme.default_post_title || "Untitled" %></h1>
</div>
<div class="col-lg-8 col-12 pt-lg-3 mb-4 pl-lg-5 px-lg-0 px-4 portfolio-content">
  <%- item.content %>
</div>

<% } else { %>

  <script src="<%- config.root %><%- item.img_js %>"></script>
  <%- js('js/masonry.js') %>
  <script src="<%- config.root %>/js/viewer.js"></script>
  <link href="<%- config.root %>/css/viewer.css" rel="stylesheet">
  <script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>

  <input id="rootUrl" hidden type="text" value="<%= config.root %>"> </input>

  <div id="viewer" class="container">
    
  </div>
  
  <script>
    // 用法实例
    var viewer = new Viewer(document.getElementById('viewer'),{
      url: 'src'
    });
    
    const $container = document.querySelector('#viewer')
    const masonry = new Masonry($container)
    // 图片地址 后面加时间戳是为了避免缓存
    // viewer 没有动态刷新功能，所以一定要进行动态刷新 update()
    masonry.init(viewer, $("#rootUrl").val())

  </script>
<% } %>
